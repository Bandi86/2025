#!/usr/bin/env python3
"""
Egyszer≈± teszt a fejlett tippmix processzorom sz√°m√°ra
"""

from advanced_tippmix_processor import AdvancedTippmixProcessor
from pathlib import Path
import json

def main():
    processor = AdvancedTippmixProcessor()

    # Egy ismert PDF kiv√°laszt√°sa
    pdf_path = Path('data/szerencsemix_archive/organized/2025/06-J√∫nius/Web__50sz__K__06-24_2025.06.24.pdf')

    if not pdf_path.exists():
        print("‚ùå PDF nem tal√°lhat√≥")
        return

    print(f"üß™ Teszt PDF: {pdf_path.name}")

    # Csak sz√∂veg kinyer√©s teszt
    text = processor.extract_text_with_pdftotext(pdf_path)

    if text:
        print(f"‚úÖ Sz√∂veg kinyerve: {len(text):,} karakter")

        # Liga szekci√≥k keres√©se
        sections = processor.parse_league_sections(text)
        print(f"‚úÖ Liga szekci√≥k: {len(sections)}")

        for section in sections[:5]:  # Els≈ë 5 szekci√≥
            print(f"  - {section['league']}")

        # Egy szekci√≥ r√©szletes feldolgoz√°sa
        if sections:
            print(f"\nüîç Els≈ë szekci√≥ r√©szletes elemz√©se:")
            first_section = sections[0]
            matches = processor.extract_matches_from_section(first_section)
            print(f"Liga: {first_section['league']}")
            print(f"Meccsek sz√°ma: {len(matches)}")

            for match in matches[:3]:  # Els≈ë 3 meccs
                print(f"  ‚öΩ {match['home_team']} - {match['away_team']}")
                print(f"     Liga: {match['league']}")
                print(f"     Bizonyoss√°g: {match.get('confidence', 'N/A')}")

    else:
        print("‚ùå Sz√∂veg kinyer√©s sikertelen")

if __name__ == "__main__":
    main()
