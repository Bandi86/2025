version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tippmixmentor_postgres
    environment:
      POSTGRES_DB: tippmixmentor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - tippmixmentor_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tippmixmentor_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tippmixmentor_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Gateway
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tippmixmentor_backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/tippmixmentor
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tippmixmentor_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ML Prediction Service
  ml-service:
    build:
      context: ./prediction_model
      dockerfile: Dockerfile
    container_name: tippmixmentor_ml_service
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/tippmixmentor
      REDIS_URL: redis://redis:6379
      MODEL_PATH: /app/models
      DATA_PATH: /app/data
      BACKEND_URL: http://backend:3001
      BACKEND_API_KEY: development-ml-key
      OLLAMA_URL: http://172.17.0.1:11434
    ports:
      - "8000:8000"
    volumes:
      - ./prediction_model:/app
      - ml_models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tippmixmentor_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3



  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tippmixmentor_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_ML_API_URL: http://localhost:8000
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-nextauth-secret-change-in-production
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
      ml-service:
        condition: service_healthy
    networks:
      - tippmixmentor_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: tippmixmentor_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - ml-service
    networks:
      - tippmixmentor_network
    profiles:
      - production

  # Monitoring Stack (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: tippmixmentor_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - tippmixmentor_network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: tippmixmentor_grafana
    ports:
      - "3002:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - tippmixmentor_network
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ml_models:
    driver: local
  frontend_node_modules:
    driver: local

  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  tippmixmentor_network:
    driver: bridge 