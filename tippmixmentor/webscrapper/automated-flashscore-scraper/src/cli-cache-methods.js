/**
 * Cache friss√≠t√©se
 */
async refreshCache() {
  console.log('üîÑ Cache friss√≠t√©se...');
  
  try {
    const { createBrowser } = await import('./scraper/browser.js');
    const browser = await createBrowser();
    
    await cacheManager.refreshCache(browser);
    
    await browser.close();
    console.log('‚úÖ Cache friss√≠t√©se befejezve!');
  } catch (error) {
    console.error('‚ùå Hiba a cache friss√≠t√©sekor:', error.message);
  }
}

/**
 * Cache √°llapot megjelen√≠t√©se
 */
async showCacheStatus() {
  console.log('üìã CACHE √ÅLLAPOT');
  console.log('===============');
  
  try {
    const status = await cacheManager.checkCacheStatus();
    
    if (status.hasCountriesCache) {
      console.log(`üåç Orsz√°gok cache: ‚úÖ (${status.countriesCacheAge} napos)`);
    } else {
      console.log('üåç Orsz√°gok cache: ‚ùå (nem tal√°lhat√≥)');
    }
    
    console.log(`üèÜ Lig√°k cache: ${status.leaguesCacheCount} orsz√°g`);
    
    if (status.leaguesCacheCount > 0) {
      console.log(`   - Legr√©gebbi: ${status.oldestLeagueCache} napos`);
      console.log(`   - Leg√∫jabb: ${status.newestLeagueCache} napos`);
    }
    
    // Cache √©rv√©nyess√©g ellen≈ërz√©se
    const cacheValidDays = 7; // Ugyanaz, mint a CacheManager oszt√°lyban
    
    if (status.hasCountriesCache && status.countriesCacheAge > cacheValidDays) {
      console.log('\n‚ö†Ô∏è  Az orsz√°gok cache elavult, friss√≠t√©s javasolt!');
    }
    
    if (status.leaguesCacheCount > 0 && status.oldestLeagueCache > cacheValidDays) {
      console.log('‚ö†Ô∏è  N√©h√°ny liga cache elavult, friss√≠t√©s javasolt!');
    }
    
    console.log('\nCache friss√≠t√©se:');
    console.log('  npm run refresh-cache');
    
  } catch (error) {
    console.error('‚ùå Hiba a cache √°llapot ellen≈ërz√©sekor:', error.message);
  }
}