#!/usr/bin/env python3
"""
Automatikus PDF feldolgoz√≥ watcher
Figyeli a pdfs mapp√°t √©s automatikusan feldolgozza az √∫j PDF f√°jlokat
"""
import os
import sys
import time
import subprocess
from pathlib import Path
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

class PDFHandler(FileSystemEventHandler):
    """PDF f√°jl esem√©nykezel≈ë"""

    def __init__(self, script_dir):
        self.script_dir = Path(script_dir)
        self.processing = False  # Megakad√°lyozza a t√∂bbsz√∂r√∂s feldolgoz√°st

    def on_created(self, event):
        """√öj f√°jl l√©trehoz√°sakor"""
        if event.is_directory:
            return

        file_path = Path(event.src_path)

        # Csak PDF f√°jlokra reag√°lunk
        if file_path.suffix.lower() == '.pdf':
            print(f"üÜï √öj PDF f√°jl √©szlelve: {file_path.name}")
            self.process_new_pdf(file_path)

    def on_moved(self, event):
        """F√°jl mozgat√°sa/√°tnevez√©se eset√©n"""
        if event.is_directory:
            return

        dest_path = Path(event.dest_path)

        # Ha PDF f√°jlt mozgattak ide
        if dest_path.suffix.lower() == '.pdf':
            print(f"üìÅ PDF f√°jl √°thelyezve: {dest_path.name}")
            self.process_new_pdf(dest_path)

    def process_new_pdf(self, pdf_path):
        """√öj PDF feldolgoz√°sa"""
        if self.processing:
            print("‚è≥ Feldolgoz√°s m√°r folyamatban, v√°rakoz√°s...")
            return

        try:
            self.processing = True
            print(f"üîÑ PDF feldolgoz√°sa elkezd≈ëd√∂tt: {pdf_path.name}")

            # Kis v√°rakoz√°s, hogy a f√°jl teljesen m√°sol√≥djon
            time.sleep(2)

            # process_all_pdfs.py futtat√°sa
            cmd = ["python3", "process_all_pdfs.py"]
            result = subprocess.run(
                cmd,
                cwd=self.script_dir,
                capture_output=True,
                text=True
            )

            if result.returncode == 0:
                print(f"‚úÖ Sikeres feldolgoz√°s: {pdf_path.name}")
                print("üìä Eredm√©ny:")
                # Az utols√≥ n√©h√°ny sor ki√≠r√°sa a kimenetb≈ël
                lines = result.stdout.strip().split('\n')
                for line in lines[-6:]:
                    if line.strip():
                        print(f"   {line}")
            else:
                print(f"‚ùå Hiba a feldolgoz√°s sor√°n: {pdf_path.name}")
                print(f"Hiba: {result.stderr}")

        except Exception as e:
            print(f"‚ùå V√°ratlan hiba: {e}")
        finally:
            self.processing = False
            print("üéØ Feldolgoz√°s befejezve, v√°rakoz√°s √∫jabb f√°jlokra...\n")

def start_watcher():
    """PDF watcher ind√≠t√°sa"""
    script_dir = Path(__file__).parent
    pdfs_dir = script_dir / "pdfs"

    # Ellen≈ërizz√ºk hogy l√©tezik-e a pdfs mappa
    if not pdfs_dir.exists():
        print("‚ùå Nincs pdfs mappa! L√©trehoz√°s...")
        pdfs_dir.mkdir()
        print(f"‚úÖ pdfs mappa l√©trehozva: {pdfs_dir}")

    print(f"üëÅÔ∏è  PDF watcher ind√≠t√°sa...")
    print(f"üìÇ Figyelt mappa: {pdfs_dir.absolute()}")
    print(f"üéØ Automatikus feldolgoz√°s: AKT√çV")
    print(f"üí° Tipp: Tegy√©l PDF f√°jlokat a {pdfs_dir.name}/ mapp√°ba")
    print("üîÑ Ctrl+C a kil√©p√©shez\n")

    # Event handler √©s observer l√©trehoz√°sa
    event_handler = PDFHandler(script_dir)
    observer = Observer()
    observer.schedule(event_handler, str(pdfs_dir), recursive=False)

    try:
        # Watcher ind√≠t√°sa
        observer.start()
        print("‚úÖ Watcher elindult, v√°rakoz√°s PDF f√°jlokra...")

        # V√©gtelen hurok - v√°runk esem√©nyekre
        while True:
            time.sleep(1)

    except KeyboardInterrupt:
        print("\nüõë Le√°ll√≠t√°s k√©rve...")
        observer.stop()
        print("‚úÖ PDF watcher le√°ll√≠tva")

    observer.join()

if __name__ == "__main__":
    # Ellen≈ërizz√ºk a f√ºgg≈ës√©geket
    try:
        from watchdog.observers import Observer
        from watchdog.events import FileSystemEventHandler
    except ImportError:
        print("‚ùå Hi√°nyz√≥ f√ºgg≈ës√©g: watchdog")
        print("Telep√≠t√©s: pip install watchdog")
        sys.exit(1)

    start_watcher()
